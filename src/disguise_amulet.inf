include ">text/disguise_amulet";

Object DisguiseAmulet "jeweled amulet"
  has transparent,
  with activated false,
       remaining_time 0,
       button_examined false,
       both_buttons_examined false,
       name 'jeweled' 'amulet',
       description [; print_ret (string) D_AMU_DESC; ],
       before [;
         ThrowAt: 
           if( second in player )
           {
             print_ret (string) D_AMU_BEFORE_THROWAT_SECOND_HELD;
           }
           print "~", (string) RandomAffirmative();
           print "throwing the amulet at ", (the) second, ".~";
           rfalse;
         AttemptToDamage:
           print (string) D_AMU_ATMPT_DMG;
           rfalse;
       ];

Object -> DisguiseAmulet_LargeJewel "large jewel"
  with appearance,
       name 'large' 'jewel' 'crystal',
       description [; print_ret (string) D_AMU_JEWEL_DESC; ];

Object -> DisguiseAmulet_DarkButton "right jewel"
  with examined_first false,
       name 'right' 'black' 'dark' 'crystal',
       description [;
         if( DisguiseAmulet.button_examined == false )
         {
           DisguiseAmulet.button_examined = true;
           self.examined_first = true;
           print_ret (string) D_AMU_D_BTN_FIRST_DESC_X_FIRST;
         }
         else 
         { 
           print D_AMU_D_BTN_DESC_COM;
	       if( self.examined_first == true )
           {
             print_ret (string) D_AMU_D_BTN_DESC_X_FIRST;
           }
           else
           {
             print_ret (string) D_AMU_D_BTN_DESC_X_SECOND;
           };
         };
       ];

Object -> DisguiseAmulet_BrightButton "right jewel"
  with examined_first false,
       name 'left' 'bright' 'light' 'white' 'crystal',
       description [;
         if( DisguiseAmulet.button_examined == false )
         {
           DisguiseAmulet.button_examined = true;
           self.examined_first = true;
           print_ret (string) D_AMU_B_BTN_FIRST_DESC_X_FIRST;
         }
         else 
         { 
           print (string) D_AMU_B_BTN_DESC_COM;
	       if( self.examined_first == true )
           {
             print_ret (string) D_AMU_B_BTN_DESC_X_FIRST;
           }
           else
           {
             print_ret (string) D_AMU_B_BTN_DESC_X_SECOND;
           };
         };
       ];

Object -> DisguiseAmulet_Lever "small lever"
  with position,
    name 'small' 'lever',
    description [; print_ret (string) D_AMU_LEV_DESC; ];
